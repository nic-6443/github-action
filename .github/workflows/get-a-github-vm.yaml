name: Get A GITHUB VM
on:
  watch:
    types: [started]
  push:
    branches:
      - main
  repository_dispatch:
    types: [run]
jobs:
  run:
    runs-on: ubuntu-latest
    if: github.actor == github.event.repository.owner.login
    steps:
      - name: Setup Env
        env:
          KEY: ${{ secrets.KEY }}
        run: |
          printf "%s" "$KEY" > /tmp/ssh.key
          chmod 600 /tmp/ssh.key
          touch continue
      - name: Tmate
        env:
          GIT_SSH_COMMAND: "ssh -i /tmp/ssh.key"
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
      - id: GetTmateSSH
        run: |
          `ps --no-headers -o "args" -C  tmate | awk '{print $1}'` -S /tmp/tmate.sock display -p '#{tmate_ssh}' | awk '{print $2}' | awk -F'@' '{print "<ssh://"$1";-nassh-args=--ssh-agent=eechpbnaifiimgajnomdipfaamobdfha@"$2"|go to ssh>"}' > /tmp/ssh_url
          `ps --no-headers -o "args" -C  tmate | awk '{print $1}'` -S /tmp/tmate.sock display -p '#{tmate_ssh}' > /tmp/TMATE_SSH
          echo "::set-output name=ssh_url::$(cat /tmp/ssh_url)"
          echo "::set-output name=ssh::$(cat /tmp/TMATE_SSH)"
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEB_HOOK }}
          SLACK_TITLE: Get A GITHUB VM
          SLACK_MESSAGE: "${{join(steps.GetTmateSSH.outputs.*, '\n')}}"
      - name: Wait tmate exit
        run: |
          while true; do ps -ec |grep  -q tmate || break; sleep 5; done
